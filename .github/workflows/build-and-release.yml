name: 构建并发布Sekiro

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*' # 当推送带v前缀的标签时触发，例如v1.0.0
  pull_request:
    branches: [ "master" ]
  workflow_dispatch: # 允许手动触发工作流

# 添加权限配置
permissions:
  contents: write
  packages: write
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # 获取完整历史记录，有助于版本号生成
      
    - name: 设置JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
        
    - name: 构建项目
      run: |
        # 使用UTF-8编码构建项目
        export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8"
        mvn -B clean package --file pom.xml
      
    - name: 获取版本号
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION=$(date +'%Y%m%d%H%M%S')
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "version=$VERSION" >> $GITHUB_OUTPUT
      
    - name: 压缩构建文件
      run: |
        mkdir -p release_files
        cp target/sekiro-open-0.0.1.jar release_files/
        
        # 检查sekiro-open-demo目录是否存在
        if [ -d "target/sekiro-open-demo" ]; then
          cp -r target/sekiro-open-demo release_files/
        fi
        
        # Linux启动脚本
        cat > release_files/start-sekiro.sh << 'EOF'
        #!/bin/bash

        # 默认端口
        PORT=5612
        STRICT_CHECK=true
        
        # 解析命令行参数
        if [ $# -ge 1 ]; then
          PORT=$1
        fi
        
        if [ $# -ge 2 ]; then
          STRICT_CHECK=$2
        fi
        
        echo "[信息] 启动参数:"
        echo "  端口: $PORT"
        echo "  严格绑定客户端检查: $STRICT_CHECK"
        
        # 设置JVM参数解决中文乱码
        JAVA_OPTS="-Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8 -Duser.language=zh -Duser.country=CN"
        
        echo "[信息] 正在启动Sekiro服务..."
        java $JAVA_OPTS -jar sekiro-open-0.0.1.jar --sekiro.port=$PORT --sekiro.strict.bindClientCheck=$STRICT_CHECK
        EOF
        
        # Windows启动脚本
        cat > release_files/start-sekiro.bat << 'EOF'
        @echo off
        setlocal enabledelayedexpansion

        REM 设置控制台编码为UTF-8
        chcp 65001 > nul

        echo [信息] 准备启动Sekiro服务...

        REM 获取命令行参数
        set PORT=5612
        set STRICT_CHECK=true

        if not "%~1" == "" (
          set PORT=%~1
        )

        if not "%~2" == "" (
          set STRICT_CHECK=%~2
        )

        echo [信息] 启动参数:
        echo   端口: %PORT%
        echo   严格绑定客户端检查: %STRICT_CHECK%

        REM 设置JAVA_OPTS环境变量
        set JAVA_OPTS=-Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8 -Duser.language=zh -Duser.country=CN

        echo [信息] 正在启动Sekiro服务...
        java %JAVA_OPTS% -jar sekiro-open-0.0.1.jar --sekiro.port=%PORT% --sekiro.strict.bindClientCheck=%STRICT_CHECK%

        if %ERRORLEVEL% NEQ 0 (
          echo [错误] 启动失败，请检查日志
        ) else (
          echo [信息] 服务已停止
        )

        pause
        EOF
        
        # 添加执行权限
        chmod +x release_files/start-sekiro.sh
        
        # 创建README
        cat > release_files/README.txt << 'EOF'
        Sekiro 启动说明
        ===============
        
        Linux/Mac启动方式:
          ./start-sekiro.sh [端口] [严格绑定检查]
        
        例如:
          ./start-sekiro.sh 23000 true
          
        Windows启动方式:
          start-sekiro.bat [端口] [严格绑定检查]
          
        例如:
          start-sekiro.bat 23000 true
          
        参数说明:
          端口 - 可选，服务监听端口，默认5612
          严格绑定检查 - 可选，true或false，默认true
        
        注意: 如果启动后出现中文乱码，请确保:
        1. Windows系统使用UTF-8编码
        2. 控制台字体支持中文显示
        EOF
        
        # 压缩文件
        cd release_files
        zip -r ../sekiro-${{ env.VERSION }}.zip ./*
      
    - name: 上传构建制品
      uses: actions/upload-artifact@v4
      with:
        name: sekiro-${{ env.VERSION }}
        path: sekiro-${{ env.VERSION }}.zip
        
    # 对于每次push到master分支也创建Release
    - name: 创建开发版Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          sekiro-${{ env.VERSION }}.zip
          target/sekiro-open-0.0.1.jar
        name: Sekiro 开发版 ${{ env.VERSION }}
        tag_name: dev-${{ env.VERSION }}
        prerelease: true
        body: |
          # Sekiro 开发版 ${{ env.VERSION }}
          
          这是最新的开发版本，构建于 ${{ github.event.head_commit.timestamp }}
          
          ## 启动方式
          
          ### Linux/Mac:
          ```bash
          ./start-sekiro.sh [端口] [严格绑定检查]
          ```
          
          ### Windows:
          ```bash
          start-sekiro.bat [端口] [严格绑定检查]
          ```
          
          ## 配置说明
          - 端口: 服务监听端口，默认为5612
          - 严格绑定客户端检查: 设置为true或false，默认为true
          
          ## 注意事项
          如果启动后出现中文乱码，请确保系统使用UTF-8编码，并且控制台字体支持中文显示。
        
    # 原有的标签Release保持不变
    - name: 创建正式版Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          sekiro-${{ env.VERSION }}.zip
          target/sekiro-open-0.0.1.jar
        name: Sekiro 版本 ${{ env.VERSION }}
        body: |
          # Sekiro 版本 ${{ env.VERSION }}
          
          ## 启动方式
          
          ### Linux/Mac:
          ```bash
          ./start-sekiro.sh [端口] [严格绑定检查]
          ```
          
          ### Windows:
          ```bash
          start-sekiro.bat [端口] [严格绑定检查]
          ```
          
          ## 配置说明
          - 端口: 服务监听端口，默认为5612
          - 严格绑定客户端检查: 设置为true或false，默认为true
          
          ## 注意事项
          如果启动后出现中文乱码，请确保系统使用UTF-8编码，并且控制台字体支持中文显示。 